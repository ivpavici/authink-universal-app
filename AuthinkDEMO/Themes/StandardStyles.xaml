<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Non-brush values that vary across themes  -->

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <x:String x:Key="BackButtonGlyph">&#xE071;</x:String>
            <x:String x:Key="BackButtonSnappedGlyph">&#xE0BA;</x:String>
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <x:String x:Key="BackButtonGlyph">&#xE071;</x:String>
            <x:String x:Key="BackButtonSnappedGlyph">&#xE0C4;</x:String>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <x:String x:Key="ChevronGlyph">&#xE26B;</x:String>

    <!--  RichTextBlock styles  -->

    <Style x:Key="BasicRichTextStyle" TargetType="RichTextBlock">
        <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}" />
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="TextTrimming" Value="WordEllipsis" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Typography.StylisticSet20" Value="True" />
        <Setter Property="Typography.DiscretionaryLigatures" Value="True" />
        <Setter Property="Typography.CaseSensitiveForms" Value="True" />
    </Style>

    <Style
        x:Key="BaselineRichTextStyle"
        BasedOn="{StaticResource BasicRichTextStyle}"
        TargetType="RichTextBlock">
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <!--  Properly align text along its baseline  -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="4" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ItemRichTextStyle"
        BasedOn="{StaticResource BaselineRichTextStyle}"
        TargetType="RichTextBlock" />

    <Style
        x:Key="BodyRichTextStyle"
        BasedOn="{StaticResource BaselineRichTextStyle}"
        TargetType="RichTextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
    </Style>

    <!--  TextBlock styles  -->

    <Style x:Key="BasicTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}" />
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="TextTrimming" Value="WordEllipsis" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Typography.StylisticSet20" Value="True" />
        <Setter Property="Typography.DiscretionaryLigatures" Value="True" />
        <Setter Property="Typography.CaseSensitiveForms" Value="True" />
    </Style>

    <Style
        x:Key="BaselineTextStyle"
        BasedOn="{StaticResource BasicTextStyle}"
        TargetType="TextBlock">
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <!--  Properly align text along its baseline  -->
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="4" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="HeaderTextStyle"
        BasedOn="{StaticResource BaselineTextStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="56" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="LineHeight" Value="40" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-2" Y="8" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SubheaderTextStyle"
        BasedOn="{StaticResource BaselineTextStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="26.667" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="LineHeight" Value="30" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="6" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="TitleTextStyle"
        BasedOn="{StaticResource BaselineTextStyle}"
        TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style
        x:Key="SubtitleTextStyle"
        BasedOn="{StaticResource BaselineTextStyle}"
        TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style
        x:Key="ItemTextStyle"
        BasedOn="{StaticResource BaselineTextStyle}"
        TargetType="TextBlock" />

    <Style
        x:Key="BodyTextStyle"
        BasedOn="{StaticResource BaselineTextStyle}"
        TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiLight" />
    </Style>

    <Style
        x:Key="CaptionTextStyle"
        BasedOn="{StaticResource BaselineTextStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}" />
    </Style>

    <Style x:Key="GroupHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
        <Setter Property="TextTrimming" Value="WordEllipsis" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="Typography.StylisticSet20" Value="True" />
        <Setter Property="Typography.DiscretionaryLigatures" Value="True" />
        <Setter Property="Typography.CaseSensitiveForms" Value="True" />
        <Setter Property="FontSize" Value="26.667" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="LineHeight" Value="30" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-1" Y="6" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button styles  -->

    <!--
        TextButtonStyle is used to style a Button using subheader-styled text with no other adornment.  There
        are two styles that are based on TextButtonStyle (TextPrimaryButtonStyle and TextSecondaryButtonStyle)
        which are used in the GroupedItemsPage as a group header and in the FileOpenPickerPage for triggering
        commands.
    -->
    <Style x:Key="TextButtonStyle" TargetType="ButtonBase">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="Text" Content="{TemplateBinding Content}" />
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeDashArray="1,1"
                            StrokeDashOffset="1.5"
                            StrokeEndLineCap="Square" />
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeDashArray="1,1"
                            StrokeDashOffset="0.5"
                            StrokeEndLineCap="Square" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked" />
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="TextPrimaryButtonStyle"
        BasedOn="{StaticResource TextButtonStyle}"
        TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource ApplicationHeaderForegroundThemeBrush}" />
    </Style>

    <Style
        x:Key="TextSecondaryButtonStyle"
        BasedOn="{StaticResource TextButtonStyle}"
        TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource ApplicationSecondaryForegroundThemeBrush}" />
    </Style>

    <!--
        TextRadioButtonStyle is used to style a RadioButton using subheader-styled text with no other adornment.
        This style is used in the SearchResultsPage to allow selection among filters.
    -->
    <Style
        x:Key="TextRadioButtonStyle"
        BasedOn="{StaticResource TextButtonStyle}"
        TargetType="RadioButton">
        <Setter Property="Margin" Value="0,0,30,0" />
    </Style>

    <!--
        AppBarButtonStyle is used to style a Button (or ToggleButton) for use in an App Bar.  Content will be centered
        and should fit within the 40 pixel radius glyph provided.  16-point Segoe UI Symbol is used for content text
        to simplify the use of glyphs from that font.  AutomationProperties.Name is used for the text below the glyph.
    -->
    <Style x:Key="AppBarButtonStyle" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="AutomationProperties.ItemType" Value="App Bar Button" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid
                        x:Name="RootGrid"
                        Width="100"
                        Background="Transparent">
                        <StackPanel Margin="0,12,0,11" VerticalAlignment="Top">
                            <Grid
                                Width="40"
                                Height="40"
                                Margin="0,0,0,5"
                                HorizontalAlignment="Center">
                                <TextBlock
                                    x:Name="BackgroundGlyph"
                                    Margin="-4,-19,0,0"
                                    FontFamily="Segoe UI Symbol"
                                    FontSize="53.333"
                                    Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"
                                    Text="&#xE0A8;" />
                                <TextBlock
                                    x:Name="OutlineGlyph"
                                    Margin="-4,-19,0,0"
                                    FontFamily="Segoe UI Symbol"
                                    FontSize="53.333"
                                    Text="&#xE0A7;" />
                                <ContentPresenter
                                    x:Name="Content"
                                    Margin="-1,-1,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                            </Grid>
                            <TextBlock
                                x:Name="TextLabel"
                                Width="88"
                                MaxHeight="32"
                                Margin="0,0,2,0"
                                FontSize="12"
                                Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
                                Style="{StaticResource BasicTextStyle}"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                TextAlignment="Center"
                                TextTrimming="WordEllipsis" />
                        </StackPanel>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeDashArray="1,1"
                            StrokeDashOffset="1.5"
                            StrokeEndLineCap="Square" />
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeDashArray="1,1"
                            StrokeDashOffset="0.5"
                            StrokeEndLineCap="Square" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullScreenLandscape" />
                                <VisualState x:Name="Filled" />
                                <VisualState x:Name="FullScreenPortrait">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Snapped">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="60" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="OutlineGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Title area styles  -->

    <Style
        x:Key="PageHeaderTextStyle"
        BasedOn="{StaticResource HeaderTextStyle}"
        TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="0,0,30,40" />
    </Style>

    <Style
        x:Key="PageSubheaderTextStyle"
        BasedOn="{StaticResource SubheaderTextStyle}"
        TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="0,0,0,40" />
    </Style>

    <Style
        x:Key="SnappedPageHeaderTextStyle"
        BasedOn="{StaticResource PageSubheaderTextStyle}"
        TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,18,40" />
    </Style>

    <!--
        BackButtonStyle is used to style a Button for use in the title area of a page.  Margins appropriate for
        the conventional page layout are included as part of the style.
    -->
    <Style x:Key="BackButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Margin" Value="36,0,36,36" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="56" />
        <Setter Property="AutomationProperties.AutomationId" Value="BackButton" />
        <Setter Property="AutomationProperties.Name" Value="Back" />
        <Setter Property="AutomationProperties.ItemType" Value="Navigation Button" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid">
                        <Grid Margin="-1,-16,0,0">
                            <TextBlock
                                x:Name="BackgroundGlyph"
                                Foreground="{StaticResource BackButtonBackgroundThemeBrush}"
                                Text="&#xE0A8;" />
                            <TextBlock
                                x:Name="NormalGlyph"
                                Foreground="{StaticResource BackButtonForegroundThemeBrush}"
                                Text="{StaticResource BackButtonGlyph}" />
                            <TextBlock
                                x:Name="ArrowGlyph"
                                Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}"
                                Opacity="0"
                                Text="&#xE0A6;" />
                        </Grid>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeDashArray="1,1"
                            StrokeDashOffset="1.5"
                            StrokeEndLineCap="Square" />
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeDashArray="1,1"
                            StrokeDashOffset="0.5"
                            StrokeEndLineCap="Square" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        PortraitBackButtonStyle is used to style a Button for use in the title area of a portrait page.  Margins appropriate
        for the conventional page layout are included as part of the style.
    -->
    <Style
        x:Key="PortraitBackButtonStyle"
        BasedOn="{StaticResource BackButtonStyle}"
        TargetType="Button">
        <Setter Property="Margin" Value="26,0,26,36" />
    </Style>

    <!--
        SnappedBackButtonStyle is used to style a Button for use in the title area of a snapped page.  Margins appropriate
        for the conventional page layout are included as part of the style.
        
        The obvious duplication here is necessary as the glyphs used in snapped are not merely smaller versions of the same
        glyph but are actually distinct.
    -->
    <Style x:Key="SnappedBackButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Margin" Value="20,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="26.66667" />
        <Setter Property="AutomationProperties.AutomationId" Value="BackButton" />
        <Setter Property="AutomationProperties.Name" Value="Back" />
        <Setter Property="AutomationProperties.ItemType" Value="Navigation Button" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid
                        x:Name="RootGrid"
                        Width="36"
                        Height="36"
                        Margin="-3,0,7,33">
                        <Grid Margin="-1,-1,0,0">
                            <TextBlock
                                x:Name="BackgroundGlyph"
                                Foreground="{StaticResource BackButtonBackgroundThemeBrush}"
                                Text="&#xE0D4;" />
                            <TextBlock
                                x:Name="NormalGlyph"
                                Foreground="{StaticResource BackButtonForegroundThemeBrush}"
                                Text="{StaticResource BackButtonSnappedGlyph}" />
                            <TextBlock
                                x:Name="ArrowGlyph"
                                Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}"
                                Opacity="0"
                                Text="&#xE0C4;" />
                        </Grid>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                            StrokeDashArray="1,1"
                            StrokeDashOffset="1.5"
                            StrokeEndLineCap="Square" />
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                            StrokeDashArray="1,1"
                            StrokeDashOffset="0.5"
                            StrokeEndLineCap="Square" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ArrowGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalGlyph"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualWhite"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="FocusVisualBlack"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Item templates  -->

    <!--  Grid-appropriate 250 pixel square item template as seen in the GroupedItemsPage and ItemsPage  -->
    <DataTemplate x:Key="Standard250x250ItemTemplate">
        <Grid
            Width="250"
            Height="250"
            HorizontalAlignment="Left">
            <Border Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image
                    AutomationProperties.Name="{Binding Title}"
                    Source="{Binding Image}"
                    Stretch="UniformToFill" />
            </Border>
            <StackPanel VerticalAlignment="Bottom" Background="{StaticResource ListViewItemOverlayBackgroundThemeBrush}">
                <TextBlock
                    Height="60"
                    Margin="15,0,15,0"
                    Foreground="{StaticResource ListViewItemOverlayForegroundThemeBrush}"
                    Style="{StaticResource TitleTextStyle}"
                    Text="{Binding Title}" />
                <TextBlock
                    Margin="15,0,15,10"
                    Foreground="{StaticResource ListViewItemOverlaySecondaryForegroundThemeBrush}"
                    Style="{StaticResource CaptionTextStyle}"
                    Text="{Binding Subtitle}"
                    TextWrapping="NoWrap" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--  Grid-appropriate 500 by 130 pixel item template as seen in the GroupDetailPage  -->
    <DataTemplate x:Key="Standard500x130ItemTemplate">
        <Grid
            Width="480"
            Height="110"
            Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Width="110"
                Height="110"
                Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image
                    AutomationProperties.Name="{Binding Title}"
                    Source="{Binding Image}"
                    Stretch="UniformToFill" />
            </Border>
            <StackPanel
                Grid.Column="1"
                Margin="10,0,0,0"
                VerticalAlignment="Top">
                <TextBlock
                    Style="{StaticResource TitleTextStyle}"
                    Text="{Binding Title}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    Style="{StaticResource CaptionTextStyle}"
                    Text="{Binding Subtitle}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    MaxHeight="60"
                    Style="{StaticResource BodyTextStyle}"
                    Text="{Binding Description}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--  List-appropriate 130 pixel high item template as seen in the SplitPage  -->
    <DataTemplate x:Key="Standard130ItemTemplate">
        <Grid Height="110" Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Width="110"
                Height="110"
                Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image
                    AutomationProperties.Name="{Binding Title}"
                    Source="{Binding Image}"
                    Stretch="UniformToFill" />
            </Border>
            <StackPanel
                Grid.Column="1"
                Margin="10,0,0,0"
                VerticalAlignment="Top">
                <TextBlock
                    Style="{StaticResource TitleTextStyle}"
                    Text="{Binding Title}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    Style="{StaticResource CaptionTextStyle}"
                    Text="{Binding Subtitle}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    MaxHeight="60"
                    Style="{StaticResource BodyTextStyle}"
                    Text="{Binding Description}" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--
        List-appropriate 80 pixel high item template as seen in the SplitPage when Filled, and
        the following pages when snapped: GroupedItemsPage, GroupDetailPage, and ItemsPage
    -->
    <DataTemplate x:Key="Standard80ItemTemplate">
        <Grid Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Width="60"
                Height="60"
                Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image Source="{Binding Image}" Stretch="UniformToFill" />
            </Border>
            <StackPanel Grid.Column="1" Margin="10,0,0,0">
                <TextBlock
                    MaxHeight="40"
                    Style="{StaticResource ItemTextStyle}"
                    Text="{Binding Title}" />
                <TextBlock
                    Style="{StaticResource CaptionTextStyle}"
                    Text="{Binding Subtitle}"
                    TextWrapping="NoWrap" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--  Grid-appropriate 300 by 70 pixel item template as seen in the SearchResultsPage  -->
    <DataTemplate x:Key="StandardSmallIcon300x70ItemTemplate">
        <Grid Width="294" Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Width="40"
                Height="40"
                Margin="0,0,0,10"
                Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image Source="{Binding Image}" Stretch="UniformToFill" />
            </Border>
            <StackPanel Grid.Column="1" Margin="10,-10,0,0">
                <TextBlock
                    Style="{StaticResource BodyTextStyle}"
                    Text="{Binding Title}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                    Style="{StaticResource BodyTextStyle}"
                    Text="{Binding Subtitle}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                    Style="{StaticResource BodyTextStyle}"
                    Text="{Binding Description}"
                    TextWrapping="NoWrap" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--  List-appropriate 70 pixel high item template as seen in the SearchResultsPage when Snapped  -->
    <DataTemplate x:Key="StandardSmallIcon70ItemTemplate">
        <Grid Margin="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Width="40"
                Height="40"
                Margin="0,0,0,10"
                Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image Source="{Binding Image}" Stretch="UniformToFill" />
            </Border>
            <StackPanel Grid.Column="1" Margin="10,-10,0,0">
                <TextBlock
                    Style="{StaticResource BodyTextStyle}"
                    Text="{Binding Title}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                    Style="{StaticResource BodyTextStyle}"
                    Text="{Binding Subtitle}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                    Style="{StaticResource BodyTextStyle}"
                    Text="{Binding Description}"
                    TextWrapping="NoWrap" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--
        190x130 pixel item template for displaying file previews as seen in the FileOpenPickerPage
        Includes an elaborate tooltip to display title and description text
    -->
    <DataTemplate x:Key="StandardFileWithTooltip190x130ItemTemplate">
        <Grid>
            <Grid Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                <Image
                    Width="190"
                    Height="130"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Source="{Binding Image}"
                    Stretch="Uniform" />
            </Grid>
            <ToolTipService.Placement>Mouse</ToolTipService.Placement>
            <ToolTipService.ToolTip>
                <ToolTip>
                    <ToolTip.Style>
                        <Style TargetType="ToolTip">
                            <Setter Property="BorderBrush" Value="{StaticResource ToolTipBackgroundThemeBrush}" />
                            <Setter Property="Padding" Value="0" />
                        </Style>
                    </ToolTip.Style>

                    <Grid Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Margin="20" Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}">
                            <Image
                                Width="160"
                                Height="160"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Source="{Binding Image}"
                                Stretch="Uniform" />
                        </Grid>
                        <StackPanel
                            Grid.Column="1"
                            Width="200"
                            Margin="0,20,20,20">
                            <TextBlock
                                Style="{StaticResource BodyTextStyle}"
                                Text="{Binding Title}"
                                TextWrapping="NoWrap" />
                            <TextBlock
                                MaxHeight="140"
                                Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                                Style="{StaticResource BodyTextStyle}"
                                Text="{Binding Description}" />
                        </StackPanel>
                    </Grid>
                </ToolTip>
            </ToolTipService.ToolTip>
        </Grid>
    </DataTemplate>

    <!--  ScrollViewer styles  -->

    <Style x:Key="HorizontalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    </Style>

    <Style x:Key="VerticalScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
    </Style>

    <!--  Page layout roots typically use entrance animations and a theme-appropriate background color  -->

    <Style x:Key="LayoutRootStyle" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}" />
        <Setter Property="ChildrenTransitions">
            <Setter.Value>
                <TransitionCollection>
                    <EntranceThemeTransition />
                </TransitionCollection>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
